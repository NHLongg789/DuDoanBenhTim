# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s98vHyNDRxFIvS27mgBRhkOaPgaTdR8b
"""

# Import các thư viện cần thiết
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
import joblib

# Tải dữ liệu
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
columns = ['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 'thalach', 'exang', 'oldpeak', 'slope', 'ca', 'thal', 'target']
data = pd.read_csv(url, names=columns)

# Xử lý dữ liệu: thay thế "?" bằng NaN và loại bỏ giá trị thiếu
data = data.replace('?', np.nan)
data = data.dropna()

# Chuyển target thành nhị phân: 0 = không mắc bệnh, 1 = mắc bệnh
data['target'] = data['target'].apply(lambda x: 1 if x > 0 else 0)

# Chia features và target
X = data.drop('target', axis=1)
y = data['target']

# Chia tập huấn luyện và tập kiểm tra
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Chuẩn hóa dữ liệu
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Huấn luyện mô hình Random Forest
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Dự đoán và đánh giá mô hình
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

# Lưu mô hình và scaler để sử dụng sau
joblib.dump(model, 'heart_disease_model.pkl')
joblib.dump(scaler, 'scaler.pkl')

# Tải file về máy tính
from google.colab import files
files.download('heart_disease_model.pkl')
files.download('scaler.pkl')

# Cài đặt ipywidgets
!pip install ipywidgets

# Tạo giao diện bằng ipywidgets
import ipywidgets as widgets
from IPython.display import display

# Tải mô hình và scaler
model = joblib.load('heart_disease_model.pkl')
scaler = joblib.load('scaler.pkl')

# Tạo các ô nhập liệu
age = widgets.FloatText(description="Age:")
sex = widgets.Dropdown(options=[('Male', 1), ('Female', 0)], description="Sex:")
cp = widgets.Dropdown(options=[('Typical Angina', 1), ('Atypical Angina', 2), ('Non-anginal Pain', 3), ('Asymptomatic', 4)], description="Chest Pain:")
trestbps = widgets.FloatText(description="Resting BP:")
chol = widgets.FloatText(description="Cholesterol:")
fbs = widgets.Dropdown(options=[('No', 0), ('Yes', 1)], description="Fasting BS > 120:")
restecg = widgets.Dropdown(options=[('Normal', 0), ('ST-T Abnormality', 1), ('Left Ventricular Hypertrophy', 2)], description="Rest ECG:")
thalach = widgets.FloatText(description="Max Heart Rate:")
exang = widgets.Dropdown(options=[('No', 0), ('Yes', 1)], description="Exercise Angina:")
oldpeak = widgets.FloatText(description="Oldpeak:")
slope = widgets.Dropdown(options=[('Upsloping', 1), ('Flat', 2), ('Downsloping', 3)], description="Slope:")
ca = widgets.FloatText(description="Num Major Vessels:")
thal = widgets.Dropdown(options=[('Normal', 3), ('Fixed Defect', 6), ('Reversible Defect', 7)], description="Thal:")

# Nút dự đoán
button = widgets.Button(description="Predict")
output = widgets.Output()

def on_button_clicked(b):
    with output:
        output.clear_output()
        # Lấy dữ liệu từ các ô nhập
        input_data = np.array([[age.value, sex.value, cp.value, trestbps.value, chol.value, fbs.value,
                                restecg.value, thalach.value, exang.value, oldpeak.value, slope.value,
                                ca.value, thal.value]])
        # Chuẩn hóa dữ liệu
        input_data = scaler.transform(input_data)
        # Dự đoán
        prediction = model.predict(input_data)
        if prediction[0] == 1:
            print("Có nguy cơ mắc bệnh tim!")
        else:
            print("Không có nguy cơ mắc bệnh tim.")

button.on_click(on_button_clicked)

# Hiển thị giao diện
display(age, sex, cp, trestbps, chol, fbs, restecg, thalach, exang, oldpeak, slope, ca, thal, button, output)